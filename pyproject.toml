[project]
name = "distribution-extension"
version = "1.0.4"
description = "Add your description here"
dependencies = [
    "einops>=0.7.0",
]
readme = "README.md"
requires-python = ">= 3.8"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "torch==2.0.1",
    "pytest-cov>=4.1.0",
    "mypy>=1.6.1",
    "ruff>=0.4.2",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 79

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    'ignore:distutils Version classes are deprecated.:DeprecationWarning',
]

[rye.scripts]
test = "rye run pytest -ra --cov=src --cov-report=term --cov-report=xml"
clean = "rm -rf .mypy_cache/ .pytest_cache/ .ruff_cache && rm -f .coverage coverage.xml && find . -type d -name __pycache__ -exec rm -r {} +"

[tool.mypy]
python_version = 3.8
ignore_missing_imports = true

[tool.ruff]
line-length = 79
target-version = "py38"

[tool.ruff.lint]
preview = true
fixable = ["ALL"]
unfixable = []
select = ["ALL"]
ignore = [
    "S101",     # assert
    "CPY001",   # missing-copyright-notice
    "PLR6301",  # no-self-use
    "COM812",   # missing-trailing-comma
    "ISC001",   # single-line-implicit-string-concatenation
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
preview = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.mccabe]
max-complexity = 4

[tool.ruff.lint.isort]
known-first-party = ["distribution_extention"]
